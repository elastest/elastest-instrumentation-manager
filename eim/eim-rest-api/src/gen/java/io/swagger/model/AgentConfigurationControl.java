/**
 * Copyright (c) 2019 Atos
 * This program and the accompanying materials
 * are made available under the terms of the Apache License v2.0
 * which accompanies this distribution, and is available at
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Contributors:
 *    @author Fernando Mendez Requena - fernando.mendez@atos.net
 * 
 * OpenAPI spec version: 1.0.0
 * 
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 * 
 * Developed in the context of ElasTest EU project http://elastest.io 
 */

package io.swagger.model;

import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * This entity defines the configuration that will be applied to the Execbeat agent
 */
@ApiModel(description = "This entity defines the configuration that will be applied to to the Execbeat agent")
public class AgentConfigurationControl {
	@JsonProperty("exec")
	private String exec = null;

	@JsonProperty("component")
	private String component = null;

	@JsonProperty("dockerized")
	private String dockerized;
	
	@JsonProperty("packetLoss")
	private String packetLoss = null;
	
	@JsonProperty("stressNg")
	private String stressNg = null;
	
	@JsonProperty("stream")
	private AgentConfigurationExecbeat stream = null;
	
	@JsonProperty("cronExpression")
	private String cronExpression = null;
	

	
public AgentConfigurationControl exec(String exec) {
     this.exec = exec;
     return this;
  }
   /**
   * Get exec
   * @return exec
   **/
  @JsonProperty("exec")
  @ApiModelProperty(example = "exec_name", required = true, value = "")
  @NotNull
  public String getExec() {
    return exec;
  }

  public void setExec(String exec) {
    this.exec = exec;
  }

  public AgentConfigurationControl component(String component) {
    this.component = component;
    return this;
  }

  /**
   * Get component
   * @return component
   **/
  @JsonProperty("component")
  @ApiModelProperty(example = "component_name", required = true, value = "")
  @NotNull
  public String getComponent() {
    return component;
  }

  public void setComponent(String component) {
    this.component = component;
  }
  
  /**
   * Get dockerized
   * @return dockerized
   **/
  @JsonProperty("dockerized")
  @ApiModelProperty(example = "yes", value = "")
  //@ApiModelProperty(example = "yes", required = true, value = "")
  //@NotNull
  public String getDockerized() {
    return dockerized;
  }

  public void setDockerized(String dockerized) {
    this.dockerized = dockerized;
  }
  
  public AgentConfigurationControl packetloss(String packetLoss) {
	  this.packetLoss= packetLoss;
	  return this;
	  
  }
 
  /**
   * Get packetLoss
   * @return packetLoss
   **/
  @JsonProperty("packetLoss")
  @ApiModelProperty(example = "0.01", value = "")
  @NotNull
  public String getPacketLoss() {
	  
	  String packetLossValue = "";
	  
	  if(packetLoss == "" || packetLoss == null) {
		  return packetLossValue;
	  }
	  
	  return "-A INPUT -m statistic --mode random --probability "+packetLoss+" -j DROP";
	  
  }
  public void setPacketLoss(String packetLoss) {
	  this.packetLoss = packetLoss;
  }
  
  public AgentConfigurationControl stressNg(String stressNg) {
	  this.stressNg = stressNg;
	  return this;
  }
  
  /**
   * Get stressNg
   * @return stressNg
   **/
  @JsonProperty("stressNg")
  @ApiModelProperty(example = "stress-ng --cpu \"+stressNg+\" --vm 2 --hdd 1 --fork 8 --switch 4 --timeout 5m --metrics-brief", value = "")
  @NotNull
  public String getStressNg() {
	  String stressNgvalue = "";
	  
	  if (stressNg == "" || stressNg == null ) {
		  return stressNgvalue;
	  }
	  
	  return "--cpu "+stressNg+" --vm 2 --hdd 1 --fork 8 --switch 4 --timeout 5m --metrics-brief";
  }
  
  public void setStressNg (String stressNg) {
	  this.stressNg=stressNg;
  }
  
  /**
   * Get cronExpression
   * @return cronExpression
   **/
  @JsonProperty("cronExpression")
  @ApiModelProperty(example = "@every 1h", value = "")
  @NotNull
  
  public String getCronExpression() {
	  return cronExpression;
  }
  
  public void setCronExpression(String cronExpression) {
	  this.cronExpression=cronExpression;
  }
  
  public  AgentConfigurationControl cronExpression(String cronExpression) {
	  this.cronExpression=cronExpression;
	  return this;
}


@Override
public String toString() {
  StringBuilder sb = new StringBuilder();
  sb.append("class AgentConfigurationControl {\n");
  
  sb.append("    exec: ").append(toIndentedString(exec)).append("\n");
  sb.append("    component: ").append(toIndentedString(component)).append("\n");
  sb.append("    dockerized: ").append(toIndentedString(dockerized)).append("\n");
  sb.append("    packetLoss: ").append(toIndentedString(packetLoss)).append("\n");
  sb.append("    stressNg: ").append(toIndentedString(stressNg)).append("\n");
  sb.append("    cronExpression: ").append(toIndentedString(cronExpression)).append("\n");
  sb.append("}");
  return sb.toString();
}

@Override
public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((component == null) ? 0 : component.hashCode());
	result = prime * result + ((cronExpression == null) ? 0 : cronExpression.hashCode());
	result = prime * result + ((dockerized == null) ? 0 : dockerized.hashCode());
	result = prime * result + ((exec == null) ? 0 : exec.hashCode());
	result = prime * result + ((packetLoss == null) ? 0 : packetLoss.hashCode());
	result = prime * result + ((stream == null) ? 0 : stream.hashCode());
	result = prime * result + ((stressNg == null) ? 0 : stressNg.hashCode());
	return result;
}
@Override
public boolean equals(Object obj) {
	if (this == obj)
		return true;
	if (obj == null)
		return false;
	if (getClass() != obj.getClass())
		return false;
	AgentConfigurationControl other = (AgentConfigurationControl) obj;
	if (component == null) {
		if (other.component != null)
			return false;
	} else if (!component.equals(other.component))
		return false;
	if (cronExpression == null) {
		if (other.cronExpression != null)
			return false;
	} else if (!cronExpression.equals(other.cronExpression))
		return false;
	if (dockerized == null) {
		if (other.dockerized != null)
			return false;
	} else if (!dockerized.equals(other.dockerized))
		return false;
	if (exec == null) {
		if (other.exec != null)
			return false;
	} else if (!exec.equals(other.exec))
		return false;
	if (packetLoss == null) {
		if (other.packetLoss != null)
			return false;
	} else if (!packetLoss.equals(other.packetLoss))
		return false;
	if (stream == null) {
		if (other.stream != null)
			return false;
	} else if (!stream.equals(other.stream))
		return false;
	if (stressNg == null) {
		if (other.stressNg != null)
			return false;
	} else if (!stressNg.equals(other.stressNg))
		return false;
	return true;
}


private String toIndentedString(java.lang.Object o) {
  if (o == null) {
    return "null";
  }
  return o.toString().replace("\n", "\n    ");
}

public boolean isDockerized() {
	  if (dockerized != null) {
		  if (dockerized.equalsIgnoreCase("yes")) {
			  return true;
		  }
		  else {
			  return false;
		  }
	  }
	  else {
		  return false;
	  }
}

}
