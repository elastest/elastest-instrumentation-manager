swagger: '2.0'
info:
  version: 1.0.0
  title: ElasTest Instrumentation Manager
  description: RESTful API specification for the ElasTest Instrumentation Manager (EIM)
  termsOfService: TBD
  contact:
    name: David Rojo (ATOS)
    email: david.rojoa@atos.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: elastest.io
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /publickey:
    get:
      tags:
        - Publickey
      summary: Retrieve public key
      description: A client retrieves the public key
      operationId: getPublickey
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Publickey'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/agent/{agentId}':
    get:
      tags:
        - Agent
      summary: Retrieve a agent
      description: Returns the agent with the given ID. Returns all its details.
      operationId: getAgentByID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: agentId
          in: path
          description: ID of agent
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/AgentFull'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Network not found
          schema:
            $ref: '#/definitions/AgentFull'
    delete:
      tags:
        - Agent
      summary: Delete a agent
      description: A client delete a agent
      operationId: deleteAgentByID
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: agentId
          in: path
          description: Id of agent to delete
          required: true
          type: string
      responses:
        '200':
          description: Network deleted successfully
          schema:
            $ref: '#/definitions/AgentDeleted'
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Network not found
          schema:
            type: string
  /agent:
    get:
      tags:
        - Agent
      summary: Returns all existing agents
      description: Returns all agents with all details
      operationId: getAllAgents
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AgentFull'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - Agent
      summary: Register an agent
      description: A client registers an agent
      operationId: postAgent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Definition of an agent that is going to be created
          required: true
          schema:
            $ref: '#/definitions/Host'
      responses:
        '200':
          description: Agent creation OK
          schema:
            $ref: '#/definitions/Agent'
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Agent'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/agent/{agentId}/{actionId}':
    post:
      tags:
        - Agent
      summary: Submit an action ti an agent
      description: A client submit an action to an agent
      operationId: postAction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: agentId
          in: path
          description: Id of agent to that receives the action
          required: true
          type: string
        - name: actionId
          in: path
          description: action to apply
          required: true
          type: string
        - in: body
          name: body
          description: Configuration of the agent
          required: true
          schema:
            $ref: '#/definitions/AgentConfiguration'
      responses:
        '200':
          description: Action applied OK
          schema:
            $ref: '#/definitions/AgentFull'
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/AgentFull'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Agent not found
          schema:
            $ref: '#/definitions/AgentFull'
  /agentconfiguration:
    get:
      tags:
        - AgentConfiguration
      summary: Returns all existing agent configurations
      description: Returns all agent configurations with all details
      operationId: getAllAgentConfigurations
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AgentConfigurationDatabase'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/agentconfiguration/{agentId}':
    get:
      tags:
        - AgentConfiguration
      summary: Retrieve an agent configuration
      description: Returns the agent configuration with the given ID. Returns all its details.
      operationId: getAgentCfgByID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: agentId
          in: path
          description: ID of agent
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/AgentConfigurationDatabase'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Network not found
          schema:
            $ref: '#/definitions/AgentConfigurationDatabase'
definitions:
  Publickey:
    type: object
    required:
      - publickey
    properties:
      publickey:
        type: string
        example: >-
          ssh-rsa
          AAAAB3NzaC1yc2EAAAADAQABAAABAQCp9ujzo4XgfcFFHZqqHvf25PP/TSAP89pxSx9sqsNsY7EPOMTpQVpYRuooaJQk7pwr8SzHJkWA2KzNcfs1hneIsfWPqhDmeDliwm3cFIrPQ3juFaoD03eRzS36F+qKyN8og5PxSCPSBtDdvdn0gvTA9j1IXQJ4oeUIxr3s8dIJiYpKY3wQeJTVCRQNGHZWrnjgSZ0YCH0wiEpUAT4mfUWmpjSyVmH8q2l2REuJbgVy5rQ7sMqaf/BvbAiKgqLYDOrcGQNjGj6in1Fuwj9vPvhyvRaNrkfj2NuA5RFN+2wPbYyClxEurFJWsD/GEHNKnd/0X88ubhZ89sIEiUYL8KB
          root@0b83a3aa4d3a
    description: This entity defines the publickey of EIM.
  Agent:
    type: object
    required:
      - agentId
      - host
    properties:
      agentId:
        type: string
      host:
        type: string
    description: This entity defines an agent.
  Host:
    type: object
    required:
      - address
      - user
      - private_key
      - logstash_ip
      - logstash_port
    properties:
      address:
        type: string
        example: 172.19.0.4
      user:
        type: string
        example: root
      private_key:
        type: string
        example: >-
          -----BEGIN RSA PRIVATE
          KEY-----\nMIIEowIBAAKCAQEAvLGBDZ5cFC3Pm7NQr9NfU37tNfcEwiAcDe0KS50b0Ecytux0\nfG4JMhghBW2zUfq2XZhBF3y9dXaoDo3w6QcqH3V9GiBF3D08687rjZnrIRHS1CzP\nwgh/pwpkGyZ6Qq7/OUGBxttr0Rc7j07VmoodqGS8hN9iioFa4Y35VPp/hzMaAek4\nN8XViyzEssKqBY821+H+dQ8ymaO2x0vgis/CHtpo8wvBD/oeDXWuTkCE5JmWWrD8\nxm/WkbFPPQJ8KewTNizjl5y4bAHxB5aLfZuriBKubqHZi9dXfwxeGA5R7VdTdyP0\njrP9JAN9dKkg8E7ewKxR6oP+MUbGHYITF/4+fwIDAQABAoIBAGQ7sj8GuQjrENY3\nmYvcr02OJfm9nuRz5BMtsINcEJNBztnGn1YdqXrXwGq+zDum/0qWfzU3yPhlsH4S\nvj861BBj+7FuJU4JpZvpjczpTzKA4kpdB3udwhl8dpLJjLZxeRf0CTkWA57NRZEp\nomP2LCzwXggDFbhXYGxiW2jdq/Knsonf0pwLsKE1vrwkyCA4f9Aqzv5TR/CcT1tE\nhFt2XvcRK2MJx9jzPRnq9V6z8WzwrS7FVJ8bVhRMCG5tkScUHcbkzJzsQZprJNVm\n5HsLJ7KKB7rjQaaCNro5uhjeSDMfRIsb9vATWIkyD+SOGj/WeW31eiYow4QnEqF4\n36NWplECgYEA9ltKOFfvSYgDs/PKm4/3V52Cz5ADCGY1ObI4ab/eVqw5mH/41Vtv\n2mUmG16cOodxCHL/boBpxdgceI5HuQrFkCFXPelHZH/ne6HE8rIo1GVrCuBE5WC9\ni0RdQ5FoD12dJWzQVYzujcYcxzKVipq6+iMRc1GyOTVwQy+P4FePFBcCgYEAxBRg\nvZcYJKiZL47qutWgV9Jdmdn6dnzZDKvcrODheVmjxj+iaXBKep/RKBORq5f+Xa8z\nG6/Za6AKpvgagGA6Q8oB+IdFp0rKMycYQhqZCWgan/BR9q17DAw0wKGp6Ck1J/iK\nvkCAo0lSTw2ycMtzP6Ct78FpatJ6Iy6SrKwi4dkCgYBh2RR7mIGUJQ/Dc7svWlkV\nVZxVMI/j0CSny9+YMPrwVetyZLHCnFSq263tBQDsRktg3bwSebKJQDLetzRJjLu3\naWarUnJmul6IvlHpS1XoNnfzk+wJZwkhvX+FjMVWBQqbiMKemCFP8jYP8ElxCc/l\n9fPCZ9pv2ofCR6vPoTdU9QKBgFl6fyclk1PvSHCGhKGcKR7KlgJGkeCOWrJIn1yZ\nBuvMt0sZ8PCy2Joa4mSqgXhP1TlFYUpKNirCDvphEB7zSsNypPGYMXYFUD6FobFQ\n1/ON+VBxZ8XtJtC5pT0eyR1z6JkD97SYVNuu8wu2UW7duQsZNSbLGWMxB6GUeESq\nDQUJAoGBAKPbaZhvj666fHIXsdFx30V63M1eCPWgtsJ+bTZw4xM4ubu5MShBbHVm\nPP4kdYhct6W0hc0iOUTslMkCZOwFKDvR+oLI73FZhLIPMy7jq5ZfiGgVcYQyB68c\n6eOAvdSrK5di8A3qWvGnZwlXuXT2JCOflfUHmKa8uOdMgDZ9yaED\n-----END
          RSA PRIVATE KEY-----
      logstash_ip:
        type: string
        example: 172.19.0.2
      logstash_port:
        type: string
        example: 5044
  AgentFull:
    type: object
    required:
      - agentId
      - host
      - monitored
      - logstash_ip
      - logstash_port
    properties:
      agentId:
        type: string
        example: 541
      host:
        type: string
        example: 172.19.0.4
      monitored:
        type: boolean
        example: true
      logstash_ip:
        type: string
        example: 172.19.0.2
      logstash_port:
        type: string
        example: 5044
    description: This entity defines an agent with all information available.
  AgentConfiguration:
    type: object
    required:
      - exec
      - component
      - packetbeat
      - filebeat
      - topbeat
    properties:
      exec:
        type: string
        example: exec_name
      component:
        type: string
        example: component_name
      packetbeat:
        type: object
        required:
          - stream
        properties:
          stream:
            type: string
            example: stream1
      filebeat:
        type: object
        required:
          - stream
          - paths
        properties:
          stream:
            type: string
            example: stream2
          paths:
            type: array
            minLength: 1
            items:
              type: string
              example: /var/log/*.log
      topbeat:
        type: object
        required:
          - stream
        properties:
          stream:
            type: string
            example: stream3
    description: This entity defines the configuration that will be applied to the agent.
  AgentDeleted:
    type: object
    required:
      - agentId
      - deleted
    properties:
      agentId:
        type: string
        example: iagent1
      deleted:
        type: string
        example: true
    description: This entity defines an agent deleted.
  AgentConfigurationDatabase:
    type: object
    required:
      - agentId
      - agentConfiguration
    properties:
      agentId:
        type: string
        example: iagent1
      agentConfiguration:
        type: object
        $ref: '#/definitions/AgentConfiguration'
    description: This entity defines an agent configuration stored in db.
