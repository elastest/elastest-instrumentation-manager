node("et_in_et"){
    
def elastestURL = ""

    elastest(tss: ['EUS'], surefireReportsPattern: '**/target/surefire-reports/TEST-*.xml', project: 'ETinET', sut:11){
        echo "...STARTING..."
    
        stage ('docker container')
            //Referencia a la librer√≠a: def elastestContainer = elastest.ctx.docker.image('elastest/ci-docker-e2e:latest')
            
            def elastestContainer = docker.image('elastest/ci-docker-e2e:latest')

            elastestContainer.pull()
            elastestContainer.inside("-u jenkins -v /var/run/docker.sock:/var/run/docker.sock:rw -v /dev/shm:/dev/shm")  {
                sh '/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf &'
                elastestURL = env.ET_SUT_PROTOCOL + '://' + env.ET_SUT_HOST + ':' + env.ET_SUT_PORT
                
                stage ("API tests")
                    try {
                        sh "cd e2e-test/; mvn package -DskipTests=true; mvn -B test -Dtest=io.elastest.eim.test.e2e.EimTJobE2eTest -DargLine'-DeusUrl=${env.ET_EUS_API} -DetEtmApi='"+elastestURL+"' -DeUser=${DEV_USER} -DePass=${DEV_PASS}';"
                        
	                    sleep(60)
                        sh "echo TEST_SUCCESSFULL COMPLETED !!"
                        
                    } catch(e) {
                        sh "echo TESTS NOT COMPLETED !! "
                        sh '''\
                          docker container ls -a
                        '''
                        throw e
                    } finally {
                        //step([$class: 'JUnitResultArchiver', testDataPublishers: [[$class: 'AttachmentPublisher']], testResults: '**/target/surefire-reports/TEST-*.xml'])
                        step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
                   }
           }
    }
  }